name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install ShellCheck
      run: |
        sudo apt-get update
        sudo apt-get install -y shellcheck
        
    - name: Run tests
      run: |
        shellcheck src/hype
        shellcheck install.sh
        shellcheck .devcontainer/post-create-command.sh
        
        chmod +x src/hype
        
        # Test commands
        ./src/hype --help
        ./src/hype --version
        
    - name: Install yq
      run: |
        sudo apt-get update
        sudo apt-get install -y yq
        
    - name: Generate release notes
      id: generate_notes
      run: |
        VERSION=$(yq eval '.version' release-note.yaml)
        RELEASE_NAME=$(yq eval '.release_name' release-note.yaml)
        DESCRIPTION=$(yq eval '.description' release-note.yaml)
        
        # Build release notes content
        cat > release_notes.md << 'EOF'
        # HYPE CLI v${{ github.ref_name }}
        
        $DESCRIPTION
        
        ## ✨ Features
        
        EOF
        
        yq eval '.features[]' release-note.yaml | sed 's/^/- /' >> release_notes.md
        
        cat >> release_notes.md << 'EOF'
        
        ## 📦 Installation
        
        ### Quick Install
        EOF
        
        yq eval '.installation.quick_install' release-note.yaml >> release_notes.md
        
        cat >> release_notes.md << 'EOF'
        
        ### Manual Install
        EOF
        
        yq eval '.installation.manual_install' release-note.yaml >> release_notes.md
        
        cat >> release_notes.md << 'EOF'
        
        ## 🚀 Quick Start
        
        EOF
        
        yq eval '.quick_start' release-note.yaml >> release_notes.md
        
        cat >> release_notes.md << 'EOF'
        
        ## 📋 Requirements
        
        EOF
        
        yq eval '.requirements[]' release-note.yaml | sed 's/^/- /' >> release_notes.md
        
        cat >> release_notes.md << 'EOF'
        
        ## 📚 Documentation
        
        See the [README.md](https://github.com/${{ github.repository }}/blob/${{ github.ref }}/README.md) for detailed usage instructions and examples.
        
        ## 🔄 Changes in v${{ github.ref_name }}
        
        ### 🚀 New Features
        EOF
        
        yq eval '.changelog.new_features[]' release-note.yaml | sed 's/^/- /' >> release_notes.md
        
        cat >> release_notes.md << 'EOF'
        
        ### ✨ Improvements
        EOF
        
        yq eval '.changelog.improvements[]' release-note.yaml | sed 's/^/- /' >> release_notes.md
        
        cat >> release_notes.md << 'EOF'
        
        ### 🛠️ Technical Updates
        EOF
        
        yq eval '.changelog.technical_updates[]' release-note.yaml | sed 's/^/- /' >> release_notes.md
        
        cat >> release_notes.md << 'EOF'
        
        ### 🔧 Breaking Changes
        EOF
        
        yq eval '.changelog.breaking_changes[]' release-note.yaml | sed 's/^/- /' >> release_notes.md
        
        cat >> release_notes.md << 'EOF'
        
        **Full Changelog**: EOF
        
        yq eval '.compare_url' release-note.yaml >> release_notes.md
        
        # Set output for next step
        echo "release_name=$RELEASE_NAME" >> $GITHUB_OUTPUT
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ steps.generate_notes.outputs.release_name }} ${{ github.ref }}
        body_path: ./release_notes.md
        draft: false
        prerelease: false
        
    - name: Upload hype binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./src/hype
        asset_name: hype
        asset_content_type: application/octet-stream