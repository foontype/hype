name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install ShellCheck
      run: |
        sudo apt-get update
        sudo apt-get install -y shellcheck
        
    - name: Run tests
      run: |
        shellcheck src/hype
        shellcheck install.sh
        shellcheck .devcontainer/post-create-command.sh
        
        chmod +x src/hype
        
        # Test commands
        ./src/hype --help
        ./src/hype --version
        
    - name: Install yq
      run: |
        sudo apt-get update
        sudo apt-get install -y yq
        
    - name: Get release notes
      id: get_release_notes
      run: |
        # Extract version from tag (remove 'v' prefix)
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        
        # Get release name and body from YAML
        RELEASE_NAME=$(yq eval ".releases.\"$VERSION\".name" release-note.yaml)
        echo "release_name=$RELEASE_NAME" >> $GITHUB_OUTPUT
        
        # Write release body to file
        yq eval ".releases.\"$VERSION\".body" release-note.yaml > release_notes.md
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ steps.get_release_notes.outputs.release_name }}
        body_path: ./release_notes.md
        draft: false
        prerelease: false
        
    - name: Upload hype binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./src/hype
        asset_name: hype
        asset_content_type: application/octet-stream