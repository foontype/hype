version: '3'

vars:
  BUILD_DIR: build
  SRC_DIR: src
  TARGET: "{{.BUILD_DIR}}/hype"
  INSTALL_DIR: "{{.HOME}}/.local/bin"

tasks:
  default:
    desc: Build the HYPE CLI (default task)
    cmds:
      - task: build

  build:
    desc: Build the final executable
    sources:
      - "src/core/*.sh"
      - "src/plugins/*.sh"
      - "src/main.sh"
    generates:
      - "{{.TARGET}}"
    cmds:
      - mkdir -p {{.BUILD_DIR}}
      - echo "Building HYPE CLI..."
      - echo "#!/bin/bash" > {{.TARGET}}
      - echo "" >> {{.TARGET}}
      - echo "set -euo pipefail" >> {{.TARGET}}
      - echo "" >> {{.TARGET}}
      - echo "# Generated by HYPE CLI build system" >> {{.TARGET}}
      - echo "# Build date$(echo ':')" $(date) >> {{.TARGET}}
      - echo "" >> {{.TARGET}}
      - bash tools/script-bundler.sh {{.TARGET}}
      - chmod +x {{.TARGET}}
      - echo "Build complete$(echo ':') {{.TARGET}}"

  lint:
    desc: Run ShellCheck on all scripts
    cmds:
      - echo "Running ShellCheck..."
      - find src -name "*.sh" -exec shellcheck -e SC1091 -e SC2034 {} \;
      - shellcheck -e SC1091 -e SC2034 install.sh || true

  clean:
    desc: Remove build artifacts
    cmds:
      - echo "Cleaning build artifacts..."
      - rm -rf {{.BUILD_DIR}}
      - echo "Clean complete"

  test:
    desc: Run test suite
    deps: [build]
    cmds:
      - echo "Running test suite..."
      - bash -c "if [ -f tests/test-suite.sh ]; then bash tests/test-suite.sh; else echo 'Test suite not yet implemented'; fi"

  install:
    desc: Install to local bin directory
    deps: [build]
    cmds:
      - echo "Installing HYPE CLI to {{.INSTALL_DIR}}..."
      - mkdir -p {{.INSTALL_DIR}}
      - cp {{.TARGET}} {{.INSTALL_DIR}}/hype
      - echo "Installation complete"

  dev-run:
    desc: Run built executable in development mode
    deps: [build]
    cmds:
      - echo "Running in development mode..."
      - "{{.TARGET}} {{.CLI_ARGS}}"

  version-check:
    desc: Check version of built binary
    deps: [build]
    cmds:
      - "{{.TARGET}} --version"

  help-check:
    desc: Show help from built binary
    deps: [build]
    cmds:
      - "{{.TARGET}} --help"

  validate:
    desc: Run comprehensive validation (build, test, lint)
    deps: [build, test, lint]
    cmds:
      - echo "All validation tasks completed successfully"